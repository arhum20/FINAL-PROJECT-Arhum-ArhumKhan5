{"version":3,"file":"static/iframe.897c868bd89fa009efbd.bundle.js","sources":["webpack:///./src/slider.js"],"sourcesContent":["import { min, max, scan } from 'd3-array';\nimport { axisTop, axisRight, axisBottom, axisLeft } from 'd3-axis';\nimport { dispatch } from 'd3-dispatch';\nimport { drag } from 'd3-drag';\nimport { easeQuadOut } from 'd3-ease';\nimport { scaleLinear, scaleTime } from 'd3-scale';\nimport { event, select } from 'd3-selection';\n\nvar UPDATE_DURATION = 200;\nvar SLIDER_END_PADDING = 8;\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\n\nfunction translateX(x) {\n  return 'translate(' + x + ',0)';\n}\n\nfunction translateY(y) {\n  return 'translate(0,' + y + ')';\n}\n\nfunction slider(orientation, scale) {\n  scale = typeof scale !== 'undefined' ? scale : null;\n\n  var value = 0;\n  var defaultValue = 0;\n  var domain = [0, 10];\n  var width = 100;\n  var height = 100;\n  var displayValue = true;\n  var handle = 'M-5.5,-5.5v10l6,5.5l6,-5.5v-10z';\n  var step = null;\n  var tickValues = null;\n  var marks = null;\n  var tickFormat = null;\n  var ticks = null;\n  var displayFormat = null;\n\n  var listeners = dispatch('onchange', 'start', 'end', 'drag');\n\n  var selection = null;\n  var identityClamped = null;\n\n  var k = orientation === top || orientation === left ? -1 : 1;\n  var x = orientation === left || orientation === right ? 'y' : 'x';\n  var y = orientation === left || orientation === right ? 'x' : 'y';\n\n  var transformAlong =\n    orientation === top || orientation === bottom ? translateX : translateY;\n\n  var transformAcross =\n    orientation === top || orientation === bottom ? translateY : translateX;\n\n  var axisFunction = null;\n\n  switch (orientation) {\n    case top:\n      axisFunction = axisTop;\n      break;\n    case right:\n      axisFunction = axisRight;\n      break;\n    case bottom:\n      axisFunction = axisBottom;\n      break;\n    case left:\n      axisFunction = axisLeft;\n      break;\n  }\n\n  var handleSelection = null;\n  var textSelection = null;\n\n  function slider(context) {\n    selection = context.selection ? context.selection() : context;\n\n    if (scale) {\n      domain = [min(scale.domain()), max(scale.domain())];\n      scale = scale.clamp(true);\n    } else {\n      scale = domain[0] instanceof Date ? scaleTime() : scaleLinear();\n\n      scale = scale\n        .domain(domain)\n        .range([\n          0,\n          orientation === top || orientation === bottom ? width : height,\n        ])\n        .clamp(true);\n    }\n\n    identityClamped = scaleLinear()\n      .range(scale.range())\n      .domain(scale.range())\n      .clamp(true);\n\n    // Ensure value is valid\n    value = scaleLinear()\n      .range(domain)\n      .domain(domain)\n      .clamp(true)(value);\n\n    tickFormat = tickFormat || scale.tickFormat();\n    displayFormat = displayFormat || tickFormat || scale.tickFormat();\n\n    var axis = selection.selectAll('.axis').data([null]);\n\n    axis\n      .enter()\n      .append('g')\n      .attr('transform', transformAcross(k * 7))\n      .attr('class', 'axis');\n\n    var slider = selection.selectAll('.slider').data([null]);\n\n    var sliderEnter = slider\n      .enter()\n      .append('g')\n      .attr('class', 'slider')\n      .attr(\n        'cursor',\n        orientation === top || orientation === bottom\n          ? 'ew-resize'\n          : 'ns-resize'\n      )\n      .call(\n        drag()\n          .on('start', dragstarted)\n          .on('drag', dragged)\n          .on('end', dragended)\n      );\n\n    sliderEnter\n      .append('line')\n      .attr('class', 'track')\n      .attr(x + '1', scale.range()[0] - SLIDER_END_PADDING)\n      .attr('stroke', '#bbb')\n      .attr('stroke-width', 6)\n      .attr('stroke-linecap', 'round');\n\n    sliderEnter\n      .append('line')\n      .attr('class', 'track-inset')\n      .attr(x + '1', scale.range()[0] - SLIDER_END_PADDING)\n      .attr('stroke', '#eee')\n      .attr('stroke-width', 4)\n      .attr('stroke-linecap', 'round');\n\n    sliderEnter\n      .append('line')\n      .attr('class', 'track-overlay')\n      .attr(x + '1', scale.range()[0] - SLIDER_END_PADDING)\n      .attr('stroke', 'transparent')\n      .attr('stroke-width', 40)\n      .attr('stroke-linecap', 'round')\n      .merge(slider.select('.track-overlay'));\n\n    var handleEnter = sliderEnter\n      .append('g')\n      .attr('class', 'parameter-value')\n      .attr('transform', transformAlong(scale(value)))\n      .attr('font-family', 'sans-serif')\n      .attr(\n        'text-anchor',\n        orientation === right\n          ? 'start'\n          : orientation === left\n            ? 'end'\n            : 'middle'\n      );\n\n    handleEnter\n      .append('path')\n      .attr('transform', 'rotate(' + (orientation + 1) * 90 + ')')\n      .attr('d', handle)\n      .attr('fill', 'white')\n      .attr('stroke', '#777');\n\n    if (displayValue) {\n      handleEnter\n        .append('text')\n        .attr('font-size', 10) // TODO: Remove coupling to font-size in d3-axis\n        .attr(y, k * 27)\n        .attr(\n          'dy',\n          orientation === top\n            ? '0em'\n            : orientation === bottom\n              ? '.71em'\n              : '.32em'\n        )\n        .text(tickFormat(value));\n    }\n\n    context\n      .select('.track')\n      .attr(x + '2', scale.range()[1] + SLIDER_END_PADDING);\n    context\n      .select('.track-inset')\n      .attr(x + '2', scale.range()[1] + SLIDER_END_PADDING);\n    context\n      .select('.track-overlay')\n      .attr(x + '2', scale.range()[1] + SLIDER_END_PADDING);\n\n    context.select('.axis').call(\n      axisFunction(scale)\n        .tickFormat(tickFormat)\n        .ticks(ticks)\n        .tickValues(tickValues)\n    );\n\n    // https://bl.ocks.org/mbostock/4323929\n    selection\n      .select('.axis')\n      .select('.domain')\n      .remove();\n\n    context.select('.axis').attr('transform', transformAcross(k * 7));\n\n    context\n      .selectAll('.axis text')\n      .attr('fill', '#aaa')\n      .attr(y, k * 20)\n      .attr(\n        'dy',\n        orientation === top ? '0em' : orientation === bottom ? '.71em' : '.32em'\n      )\n      .attr(\n        'text-anchor',\n        orientation === right\n          ? 'start'\n          : orientation === left\n            ? 'end'\n            : 'middle'\n      );\n\n    context.selectAll('.axis line').attr('stroke', '#aaa');\n\n    context\n      .select('.parameter-value')\n      .attr('transform', transformAlong(scale(value)));\n\n    fadeTickText();\n\n    function dragstarted() {\n      select(this).classed('active', true);\n\n      var pos = identityClamped(\n        orientation === bottom || orientation === top ? event.x : event.y\n      );\n\n      var newValue = alignedValue(scale.invert(pos));\n\n      updateHandle(newValue);\n      listeners.call('start', slider, newValue);\n      updateValue(newValue, true);\n    }\n\n    function dragged() {\n      var pos = identityClamped(\n        orientation === bottom || orientation === top ? event.x : event.y\n      );\n      var newValue = alignedValue(scale.invert(pos));\n\n      updateHandle(newValue);\n      listeners.call('drag', slider, newValue);\n      updateValue(newValue, true);\n    }\n\n    function dragended() {\n      select(this).classed('active', false);\n      var pos = identityClamped(\n        orientation === bottom || orientation === top ? event.x : event.y\n      );\n      var newValue = alignedValue(scale.invert(pos));\n\n      updateHandle(newValue);\n      listeners.call('end', slider, newValue);\n      updateValue(newValue, true);\n    }\n\n    textSelection = selection.select('.parameter-value text');\n    handleSelection = selection.select('.parameter-value');\n  }\n\n  function fadeTickText() {\n    if (displayValue) {\n      var distances = [];\n\n      selection.selectAll('.axis .tick').each(function(d) {\n        distances.push(Math.abs(d - value));\n      });\n\n      var index = scan(distances);\n\n      selection.selectAll('.axis .tick text').attr('opacity', function(d, i) {\n        return i === index ? 0 : 1;\n      });\n    }\n  }\n\n  function alignedValue(newValue) {\n    if (step) {\n      var valueModStep = (newValue - domain[0]) % step;\n      var alignValue = newValue - valueModStep;\n\n      if (valueModStep * 2 > step) {\n        alignValue += step;\n      }\n\n      return newValue instanceof Date ? new Date(alignValue) : alignValue;\n    }\n\n    if (marks) {\n      var index = scan(\n        marks.map(function(d) {\n          return Math.abs(newValue - d);\n        })\n      );\n\n      return marks[index];\n    }\n\n    return newValue;\n  }\n\n  function updateValue(newValue, notifyListener) {\n    if (value !== newValue) {\n      value = newValue;\n\n      if (notifyListener) {\n        listeners.call('onchange', slider, newValue);\n      }\n\n      fadeTickText();\n    }\n  }\n\n  function updateHandle(newValue, animate) {\n    animate = typeof animate !== 'undefined' ? animate : false;\n\n    if (animate) {\n      handleSelection\n        .transition()\n        .ease(easeQuadOut)\n        .duration(UPDATE_DURATION)\n        .attr('transform', transformAlong(scale(newValue)));\n    } else {\n      handleSelection.attr('transform', transformAlong(scale(newValue)));\n    }\n\n    if (displayValue) {\n      textSelection.text(displayFormat(newValue));\n    }\n  }\n\n  slider.min = function(_) {\n    if (!arguments.length) return domain[0];\n    domain[0] = _;\n    return slider;\n  };\n\n  slider.max = function(_) {\n    if (!arguments.length) return domain[1];\n    domain[1] = _;\n    return slider;\n  };\n\n  slider.domain = function(_) {\n    if (!arguments.length) return domain;\n    domain = _;\n    return slider;\n  };\n\n  slider.width = function(_) {\n    if (!arguments.length) return width;\n    width = _;\n    return slider;\n  };\n\n  slider.height = function(_) {\n    if (!arguments.length) return height;\n    height = _;\n    return slider;\n  };\n\n  slider.tickFormat = function(_) {\n    if (!arguments.length) return tickFormat;\n    tickFormat = _;\n    return slider;\n  };\n\n  slider.displayFormat = function(_) {\n    if (!arguments.length) return displayFormat;\n    displayFormat = _;\n    return slider;\n  };\n\n  slider.ticks = function(_) {\n    if (!arguments.length) return ticks;\n    ticks = _;\n    return slider;\n  };\n\n  slider.value = function(_) {\n    if (!arguments.length) return value;\n    var pos = identityClamped(scale(_));\n    var newValue = alignedValue(scale.invert(pos));\n\n    updateHandle(newValue, true);\n    updateValue(newValue, true);\n\n    return slider;\n  };\n\n  slider.silentValue = function(_) {\n    if (!arguments.length) return value;\n    var pos = identityClamped(scale(_));\n    var newValue = alignedValue(scale.invert(pos));\n\n    updateHandle(newValue, false);\n    updateValue(newValue, false);\n\n    return slider;\n  };\n\n  slider.default = function(_) {\n    if (!arguments.length) return defaultValue;\n    defaultValue = _;\n    value = _;\n    return slider;\n  };\n\n  slider.step = function(_) {\n    if (!arguments.length) return step;\n    step = _;\n    return slider;\n  };\n\n  slider.tickValues = function(_) {\n    if (!arguments.length) return tickValues;\n    tickValues = _;\n    return slider;\n  };\n\n  slider.marks = function(_) {\n    if (!arguments.length) return marks;\n    marks = _;\n    return slider;\n  };\n\n  slider.handle = function(_) {\n    if (!arguments.length) return handle;\n    handle = _;\n    return slider;\n  };\n\n  slider.displayValue = function(_) {\n    if (!arguments.length) return displayValue;\n    displayValue = _;\n    return slider;\n  };\n\n  slider.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? slider : value;\n  };\n\n  return slider;\n}\n\nexport function sliderHorizontal(scale) {\n  return slider(bottom, scale);\n}\n\nexport function sliderVertical(scale) {\n  return slider(left, scale);\n}\n\nexport function sliderTop(scale) {\n  return slider(top, scale);\n}\n\nexport function sliderRight(scale) {\n  return slider(right, scale);\n}\n\nexport function sliderBottom(scale) {\n  return slider(bottom, scale);\n}\n\nexport function sliderLeft(scale) {\n  return slider(left, scale);\n}\n"],"mappings":"AAAA","sourceRoot":""}